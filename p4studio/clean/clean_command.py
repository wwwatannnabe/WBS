#!/usr/bin/env python3

#  INTEL CONFIDENTIAL
#
#  Copyright (c) 2021 Intel Corporation
#  All Rights Reserved.
#
#  This software and the related documents are Intel copyrighted materials,
#  and your use of them is governed by the express license under which they
#  were provided to you ("License"). Unless the License provides otherwise,
#  you may not use, modify, copy, publish, distribute, disclose or transmit this
#  software or the related documents without Intel's prior written permission.
#
#  This software and the related documents are provided as is, with no express or
#  implied warranties, other than those that are expressly stated in the License.

import glob
import os
from pathlib import Path
from shutil import rmtree

import click
from click import confirm

from dependencies import source
from utils.logging import p4studio_logs_dir
from utils.terminal import print_normal, print_separator, print_green
from workspace import current_workspace


@click.command("clean", short_help="Remove files generated by p4studio")
@click.option("--skip-logs", default=False, is_flag=True, help="Do not remove p4studio logs")
@click.option("--skip-build-dir", default=False, is_flag=True, help="Do not remove build files")
@click.option("--yes", '-y', default=False, is_flag=True, help="Do not prompt for confirmation")
def clean_command(skip_logs, skip_build_dir, yes):
    """
    Remove files generated by p4studio as long as they were created in default locations.
    """
    print_normal("This will remove:")
    print_normal(" - temporary files created during dependency installation")
    if not skip_build_dir:
        print_normal(" - cmake build files")
    if not skip_logs:
        print_normal(" - p4studio logs")

    print_separator()

    if not yes:
        yes = confirm("Are you sure you want to continue?", default=False)

    if not yes:
        return

    print_green("Removing files...")
    if not skip_logs: remove_logs()
    if not skip_build_dir: remove_build_dir()
    remove_temporary_files_from_dependencies_python_package()
    print_green("Files removed.")


def remove_logs():
    for file in glob.glob(str(p4studio_logs_dir() / '*.log')):
        Path(file).unlink()


def remove_build_dir():
    path = current_workspace().build_path
    if path.exists():
        rmtree(path)


def remove_temporary_files_from_dependencies_python_package():
    for path in files_to_remove():
        if path.is_dir():
            rmtree(str(path))
        else:
            path.unlink()


def files_to_remove():
    package_dir = os.path.dirname(os.path.abspath(source.__file__))

    for pattern in ['PI*', 'boost*', 'bridge*', 'grpc*', 'thrift*', 'libcli*', 'Libcli*']:
        for file in glob.glob(package_dir + '/' + pattern):
            yield Path(file)
